"use strict";const BigBrother=(()=>{const a={},b={},c={"interpolate-for":{existingProperty:null,child:"watchers",callback:"interpolateForNode"},"view-if":{existingProperty:null,child:"watchers",callback:"viewIfNode"},"watch-text":{existingProperty:["textContent","innerText"],child:"watchers",callback:"watchNode"},"watch-value":{existingProperty:"value",child:"watchers",callback:"watchNode"},"watch-html":{existingProperty:"innerHTML",child:"watchers",callback:"watchNode"},"watch-class":{existingProperty:"className",child:"watchers",callback:"watchNode"},"watch-id":{existingProperty:"id",child:"watchers",callback:"watchNode"},"watch-name":{existingProperty:"name",child:"watchers",callback:"watchNode"},"listen-input":{existingProperty:"input",callback:"listenToNode"},"listen-click":{existingProperty:"click",callback:"listenToNode"},"listen-change":{existingProperty:"change",callback:"listenToNode"}},d={interpolateForNode:({thinkpol:a,observable:b,observedProperty:c,node:d})=>{const e=d.parentNode,f=b[c],g=/\$\{key\}/g,h=/\$\{value\}/g;for(const i in f){const b=f[i],c=d.cloneNode(!0);for(const a of d.attributes){const d=a.nodeName,e=a.nodeValue.replace(g,i).replace(h,b);c.attributes[d].nodeValue=e}e.insertBefore(c,d),a.cleanDOM&&c.removeAttribute("interpolate-for")}e.removeChild(d)},viewIfNode:({thinkpol:a,observable:b,observedProperty:c,node:d,watchKey:e})=>{a.unperson(b,c,d),a.watch(e,()=>a.unperson(b,c,d))},watchNode:({thinkpol:a,observable:b,observedProperty:c,node:d,nodeProperty:e,watchKey:f})=>{d[e]=b[c],a.watch(f,()=>d[e]=b[c])},listenToNode:({thinkpol:a,observable:b,observedProperty:c,node:d,nodeProperty:e})=>{d.addEventListener(e,d=>{b.listeners[c]===void 0?b.watchers[c]=d.target.value:b.listeners[c].call(a.personnelDetails(),d)},!0)}},e=a=>{const b={};for(const c of Object.keys(a)){const d=a[c];b[c]=d instanceof Object&&!(d instanceof Function)&&null!==d?e(d):d}return b};class f{constructor(a,b){this.id=a.id,this.cleanDOM=b,this.data={id:a.id,listeners:a.listeners,watchers:e(a.watchers)},this.signals={},this.removed={},this.children={},this.parent=void 0}setup(a,b,c){this.connectObservableProperties(this.data.watchers),this.collectNamedChildren(c),this.parseDOM(a,b,this.personnelDetails())}watch(a,b){this.signals[a]||(this.signals[a]=[]),this.signals[a].push(b)}notify(a){!this.signals[a]||1>this.signals[a].length||this.signals[a].forEach(function(a){a.call()})}unperson(a,b,c){if(!a[b]){const a=c.parentNode,b=Array.from(a.children).indexOf(c);this.removed[c]={parent:a,index:b},a.removeChild(c)}else if(c in this.removed){const a=this.removed[c],b=a.parent,d=b.childNodes[a.index];b.insertBefore(c,d)}}personnelDetails(a=!0){const b={id:this.id,watchers:this.data.watchers,listeners:this.data.listeners};return a&&(b.parent=this.parent,b.children=this.children),b}connectObservableProperties(a,b){const c=this;for(const d in a)if(a.hasOwnProperty(d)){let e=a[d],f=b===void 0?d:`${b}.${d}`;if(e instanceof Object&&b===void 0){c.connectObservableProperties(e,f);continue}Object.defineProperty(a,d,{get(){return e},set(a){e=a,c.notify(f)}})}}collectNamedChildren(a){const b=a.map(a=>`[designation][uuid="${a}"]`).join(",");if(""!==b)for(const a of document.querySelectorAll(b)){const b=a.attributes.designation.value,c=a.attributes.uuid.value;this.cleanDOM&&a.removeAttribute("designation"),this.children[b]=c}}parseDOM(a,b,e){for(const f in c){const g=c[f],h=d[g.callback],i=g.child,j=i===void 0?e:e[i],k=b.map(a=>`[${f}][uuid="${a}"]`).join(",");if(Array.isArray(g.existingProperty)){for(const b of g.existingProperty)this.observeNodeAttr(a,k,f,b,j,h);continue}this.observeNodeAttr(a,k,f,g.existingProperty,j,h)}}observeNodeAttr(a,b,c,d,e,f){if(b)for(const g of a.querySelectorAll(b)){const a=g.attributes[c].value,b=a.split("."),h={thinkpol:this,observable:e,observedProperty:a,node:g,nodeProperty:d,watchKey:a};if(this.cleanDOM&&g.removeAttribute(c),1===b.length){f(h);continue}let i=b.shift(),j=Object.assign({},e);for(const a of b)j=j[i],i=a;h.observable=j,h.observedProperty=i,f(h)}}}class g{constructor(a){this.partyMembersByUUID={},this.maxUUID=Number.MAX_SAFE_INTEGER-1,this.uuid=0,this.debug=a}load(){for(const a in this.loadRecursiveNodesWithParent(document.body),b){const c=b[a];c.parentNode.removeChild(c)}return this.partyMembersByUUID}loadRecursiveNodesWithParent(c,d=0,e){if(1e3<=d)return;let f=Array.from(c.childNodes);f=f.filter(a=>1===a.nodeType&&"template"!==a.localName);for(const g of f){const f=g.localName;if(this.isExistingParent(f,e)){const a=c.localName;console.error(`Warning: "${a}" creates infinite recursion in "${f}"`);continue}const h=this.nextUUID();if(g.setAttribute("uuid",h),void 0!==e)if(void 0===a[f]){this.partyMembersByUUID[e].nodes.push(h);continue}else this.partyMembersByUUID[e].children.push(h);g.innerHTML=b[f].innerHTML,this.partyMembersByUUID[h]={id:f,parentUUID:e,debug:this.debug,nodes:[],children:[]},this.loadRecursiveNodesWithParent(g,d+1,h)}}isExistingParent(a,b){if(b===void 0)return!1;const c=this.partyMembersByUUID[b];for(let d=c;b!==void 0;d=this.partyMembersByUUID[b]){if(a===d.id)return!0;b=d.parentUUID}return!1}nextUUID(){if(this.uuid++,this.uuid>this.maxUUID)throw new Error("UUID limit reached");return this.uuid}}return{registerPartyMember:({id:c,watchers:d,listeners:e})=>{a[c]={id:c,watchers:d||{},listeners:e||{}},b[c]=`template[party-member="${c}"]`},beginWatching:(c=!1)=>{for(const[a,d]of Object.entries(b))b[a]=document.querySelector(d);const d=new g(c).load();for(const[b,e]of Object.entries(d)){const c=document.querySelector(`${e.id}[uuid="${b}"]`),d=a[e.id],g=new f(d,!e.debug);g.setup(c,e.nodes,e.children),e.inst=g}for(const a of Object.values(d)){const b=a.parentUUID;if(!b)continue;const c=d[b],e=a.inst.children;a.inst.parent=c.inst.personnelDetails(!1);for(const[a,b]of Object.entries(e)){const c=d[b];e[a]=c.inst.personnelDetails(!1)}}}}})();