"use strict";const BigBrother=(()=>{const i={},j={},l={"interpolate-for":{existingProperty:null,child:"watchers",callback:"interpolateForNode"},"view-if":{existingProperty:null,child:"watchers",callback:"viewIfNode"},"watch-text":{existingProperty:["textContent","innerText"],child:"watchers",callback:"watchNode"},"watch-value":{existingProperty:"value",child:"watchers",callback:"watchNode"},"watch-html":{existingProperty:"innerHTML",child:"watchers",callback:"watchNode"},"watch-class":{existingProperty:"className",child:"watchers",callback:"watchNode"},"watch-id":{existingProperty:"id",child:"watchers",callback:"watchNode"},"watch-name":{existingProperty:"name",child:"watchers",callback:"watchNode"},"listen-input":{existingProperty:"input",callback:"listenToNode"},"listen-click":{existingProperty:"click",callback:"listenToNode"},"listen-change":{existingProperty:"change",callback:"listenToNode"}},c={interpolateForNode:({thinkpol:j,observable:a,observedProperty:b,node:k})=>{const d=k.parentNode,e=a[b],f=/\$\{key\}/g,g=/\$\{value\}/g;for(const h in e){const i=e[h],b=k.cloneNode(!0);for(const c of k.attributes){const a=c.nodeName,d=c.nodeValue.replace(f,h).replace(g,i);b.attributes[a].nodeValue=d}d.insertBefore(b,k),j.cleanDOM&&b.removeAttribute("interpolate-for")}d.removeChild(k)},viewIfNode:({thinkpol:f,observable:a,observedProperty:b,node:c,watchKey:d})=>{f.unperson(a,b,c),f.watch(d,()=>f.unperson(a,b,c))},watchNode:({thinkpol:g,observable:a,observedProperty:b,node:c,nodeProperty:d,watchKey:e})=>{c[d]=a[b],g.watch(e,()=>c[d]=a[b])},listenToNode:({thinkpol:f,observable:a,observedProperty:b,node:c,nodeProperty:d})=>{c.addEventListener(d,c=>{void 0===a.listeners[b]?a.watchers[b]=c.target.value:a.listeners[b].call(f.personnelDetails(),c)},!0)}},h=e=>{const a={};for(const b of Object.keys(e)){const c=e[b];a[b]=c instanceof Object&&!(c instanceof Function)&&null!==c?h(c):c}return a};class a{constructor(c,a){this.id=c.id,this.cleanDOM=a,this.data={id:c.id,listeners:c.listeners,watchers:h(c.watchers)},this.signals={},this.removed={},this.children={},this.parent=void 0}setup(d,a,b){this.connectObservableProperties(this.data.watchers),this.collectNamedChildren(b),this.parseDOM(d,a,this.personnelDetails())}watch(c,a){this.signals[c]||(this.signals[c]=[]),this.signals[c].push(a)}notify(b){!this.signals[b]||1>this.signals[b].length||this.signals[b].forEach(function(b){b.call()})}unperson(d,a,e){if(!d[a]){const c=e.parentNode,a=Array.from(c.children).indexOf(e);this.removed[e]={parent:c,index:a},c.removeChild(e)}else if(e in this.removed){const c=this.removed[e],a=c.parent,b=a.childNodes[c.index];a.insertBefore(e,b)}}personnelDetails(c=!0){const a={id:this.id,watchers:this.data.watchers,listeners:this.data.listeners};return c&&(a.parent=this.parent,a.children=this.children),a}connectObservableProperties(g,a){const b=this;for(const c in g)if(g.hasOwnProperty(c)){let d=g[c],e=void 0===a?c:`${a}.${c}`;if(d instanceof Object&&void 0===a){b.connectObservableProperties(d,e);continue}Object.defineProperty(g,c,{get(){return d},set(c){d=c,b.notify(e)}})}}collectNamedChildren(c){const d=c.map(b=>`[designation][uuid="${b}"]`).join(",");if(""!==d)for(const e of document.querySelectorAll(d)){const a=e.attributes.designation.value,b=e.attributes.uuid.value;this.cleanDOM&&e.removeAttribute("designation"),this.children[a]=b}}parseDOM(d,a,b){for(const e in l){const f=l[e],g=c[f.callback],h=f.child,i=void 0===h?b:b[h],j=a.map(b=>`[${e}][uuid="${b}"]`).join(",");if(Array.isArray(f.existingProperty)){for(const a of f.existingProperty)this.observeNodeAttr(d,j,e,a,i,g);continue}this.observeNodeAttr(d,j,e,f.existingProperty,i,g)}}observeNodeAttr(h,a,k,c,d,e){if(a)for(const f of h.querySelectorAll(a)){const g=f.attributes[k].value,l=g.split("."),a={thinkpol:this,observable:d,observedProperty:g,node:f,nodeProperty:c,watchKey:g};if(this.cleanDOM&&f.removeAttribute(k),1===l.length){e(a);continue}let b=l.shift(),h=Object.assign({},d);for(const c of l)h=h[b],b=c;a.observable=h,a.observedProperty=b,e(a)}}}class b{constructor(b){this.partyMembersByUUID={},this.maxUUID=Number.MAX_SAFE_INTEGER-1,this.uuid=0,this.debug=b}load(){for(const b in this.loadRecursiveNodesWithParent(document.body),j){const a=j[b];a.parentNode.removeChild(a)}return this.partyMembersByUUID}loadRecursiveNodesWithParent(b,a=0,c){if(1e3<=a)return;let d=Array.from(b.childNodes);d=d.filter(b=>1===b.nodeType&&"template"!==b.localName);for(const e of d){const d=e.localName;if(this.isExistingParent(d,c)){const c=b.localName;console.error(`Warning: "${c}" creates infinite recursion in "${d}"`);continue}const f=this.nextUUID();if(e.setAttribute("uuid",f),void 0!==c)if(void 0===i[d]){this.partyMembersByUUID[c].nodes.push(f);continue}else this.partyMembersByUUID[c].children.push(f);e.innerHTML=j[d].innerHTML,this.partyMembersByUUID[f]={id:d,parentUUID:c,debug:this.debug,nodes:[],children:[]},this.loadRecursiveNodesWithParent(e,a+1,f)}}isExistingParent(e,a){if(void 0===a)return!1;const f=this.partyMembersByUUID[a];for(let b=f;void 0!==a;b=this.partyMembersByUUID[a]){if(e===b.id)return!0;a=b.parentUUID}return!1}nextUUID(){if(this.uuid++,this.uuid>this.maxUUID)throw new Error("UUID limit reached");return this.uuid}}return{registerPartyMember:({id:a,watchers:b,listeners:c})=>{i[a]={id:a,watchers:b||{},listeners:c||{}},j[a]=`template[party-member="${a}"]`},beginWatching:(e=!1)=>{for(const[b,a]of Object.entries(j))j[b]=document.querySelector(a);const f=new b(e).load();for(const[h,b]of Object.entries(f)){const e=document.querySelector(`${b.id}[uuid="${h}"]`),c=i[b.id],d=new a(c,!b.debug);d.setup(e,b.nodes,b.children),b.inst=d}for(const d of Object.values(f)){const a=d.parentUUID;if(!a)continue;const b=f[a],g=d.inst.children;d.inst.parent=b.inst.personnelDetails(!1);for(const[d,a]of Object.entries(g)){const b=f[a];g[d]=b.inst.personnelDetails(!1)}}}}})();